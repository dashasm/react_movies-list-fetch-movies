{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","addMovie","useState","setTitle","isLoading","setIsLoading","hasError","setHasError","setMovie","submitForm","useCallback","event","preventDefault","response","Title","Plot","Poster","imdbID","finally","onSubmit","htmlFor","type","id","placeholder","value","onChange","e","target","classNames","disabled","length","onClick","App","setMovies","newMovie","every","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80f995dc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Movie } from '../../types/Movie';\r\nimport './MovieCard.scss';\r\n\r\ntype Props = {\r\n  movie: Movie | null,\r\n};\r\n\r\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\r\n  <div className=\"card\" data-cy=\"movieCard\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          data-cy=\"moviePoster\"\r\n          src={movie?.imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\" data-cy=\"movieDescription\">\r\n        {movie?.description}\r\n        <br />\r\n        <a href={movie?.imdbUrl} data-cy=\"movieURL\">\r\n          IMDB\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=5ea092d5';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useCallback, useState } from 'react';\r\nimport './FindMovie.scss';\r\n\r\nimport classNames from 'classnames';\r\nimport { getMovie } from '../../api';\r\nimport { Movie } from '../../types/Movie';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\ninterface Props {\r\n  addMovie: (movie: Movie) => void;\r\n}\r\n\r\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [movie, setMovie] = useState<Movie | null>(null);\r\n\r\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTitle(e.target.value);\r\n    setHasError(false);\r\n  };\r\n\r\n  const submitForm = useCallback(\r\n    (event: React.FormEvent<HTMLFormElement>) => {\r\n      event.preventDefault();\r\n\r\n      setIsLoading(true);\r\n\r\n      getMovie(title).then(response => {\r\n        if ('Error' in response) {\r\n          setHasError(true);\r\n        } else {\r\n          setMovie({\r\n            title: response.Title,\r\n            description: response.Plot,\r\n            imgUrl: response.Poster === 'N/A'\r\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\r\n              : response.Poster,\r\n            imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\r\n            imdbId: response.imdbID,\r\n          });\r\n        }\r\n      }).finally(() => setIsLoading(false));\r\n    }, [getMovie, title],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        className=\"find-movie\"\r\n        onSubmit={submitForm}\r\n      >\r\n        <div className=\"field\">\r\n          <label className=\"label\" htmlFor=\"movie-title\">\r\n            Movie title\r\n          </label>\r\n\r\n          <div className=\"control\">\r\n            <input\r\n              data-cy=\"titleField\"\r\n              type=\"text\"\r\n              id=\"movie-title\"\r\n              placeholder=\"Enter a title to search\"\r\n              className=\"input is-dander\"\r\n              value={title}\r\n              onChange={handleInput}\r\n            />\r\n          </div>\r\n\r\n          {hasError && (\r\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\r\n              Can&apos;t find a movie with such a title\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"field is-grouped\">\r\n          <div className=\"control\">\r\n            <button\r\n              data-cy=\"searchButton\"\r\n              type=\"submit\"\r\n              className={classNames(\r\n                'button is-light',\r\n                { 'is-loading': isLoading },\r\n              )}\r\n              disabled={title.length === 0}\r\n            >\r\n              {movie ? 'Search again' : 'Find a movie'}\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"control\">\r\n            {title && movie && (\r\n              <button\r\n                data-cy=\"addButton\"\r\n                type=\"button\"\r\n                className=\"button is-primary\"\r\n                onClick={() => {\r\n                  addMovie(movie);\r\n                  setTitle('');\r\n                  setMovie(null);\r\n                }}\r\n              >\r\n                Add to the list\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"container\" data-cy=\"previewContainer\">\r\n        {movie\r\n          && (\r\n            <>\r\n              <h2 className=\"title\">Preview</h2>\r\n              <MovieCard movie={movie} />\r\n            </>\r\n          )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    if (movies.every(movie => movie.imdbId !== newMovie.imdbId)) {\n      setMovies(prevMovies => [...prevMovies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}